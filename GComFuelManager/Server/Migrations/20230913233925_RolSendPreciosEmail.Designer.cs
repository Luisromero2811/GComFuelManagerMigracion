// <auto-generated />
using System;
using GComFuelManager.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GComFuelManager.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230913233925_RolSendPreciosEmail")]
    partial class RolSendPreciosEmail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GComFuelManager.Server.Identity.IdentityUsuario", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("UserCod")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Accion", b =>
                {
                    b.Property<short?>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short?>("Cod"));

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cod");

                    b.ToTable("Accion");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.AccionCorreo", b =>
                {
                    b.Property<int?>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Cod"));

                    b.Property<short?>("CodAccion")
                        .HasColumnType("smallint");

                    b.Property<int>("CodContacto")
                        .HasColumnType("int");

                    b.HasKey("Cod");

                    b.HasIndex("CodAccion");

                    b.HasIndex("CodContacto");

                    b.ToTable("AccionCorreo");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Actividad", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod"));

                    b.Property<string>("Act")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Codusu")
                        .HasColumnType("int");

                    b.Property<bool?>("Exit")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Fch")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fchfin")
                        .HasColumnType("datetime2");

                    b.HasKey("Cod");

                    b.ToTable("Actividad");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.ActividadRegistrada", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AffectedColumns")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActividadRegistrada");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.BitacoraModificacion", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod"));

                    b.Property<int?>("Codchf")
                        .HasColumnType("int");

                    b.Property<int?>("Coddes")
                        .HasColumnType("int");

                    b.Property<int?>("Codordemb")
                        .HasColumnType("int");

                    b.Property<int?>("Codpip")
                        .HasColumnType("int");

                    b.Property<int?>("Codton")
                        .HasColumnType("int");

                    b.Property<int?>("Codusu")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fchcar")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fchmod")
                        .HasColumnType("datetime2");

                    b.HasKey("Cod");

                    b.ToTable("BitacoraModificacion");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Chofer", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("Codtransport")
                        .HasColumnType("int");

                    b.Property<string>("Den")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Dricod")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Shortden")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Cod");

                    b.ToTable("Chofer");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.CierrePrecioDespuesFecha", b =>
                {
                    b.Property<int?>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Cod"));

                    b.Property<int?>("CodCie")
                        .HasColumnType("int");

                    b.Property<int?>("CodCte")
                        .HasColumnType("int");

                    b.Property<short?>("CodPrd")
                        .HasColumnType("smallint");

                    b.Property<double?>("Precio")
                        .HasColumnType("float");

                    b.HasKey("Cod");

                    b.ToTable("CierrePrecioDespuesFecha");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Ciudad", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod"));

                    b.Property<int?>("Codent")
                        .HasColumnType("int");

                    b.Property<string>("Den")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime?>("Fch")
                        .HasColumnType("datetime2");

                    b.HasKey("Cod");

                    b.ToTable("Ciudad");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Cliente", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("CodCte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Codforpag")
                        .HasColumnType("int");

                    b.Property<string>("Codsyn")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short?>("Codtad")
                        .HasColumnType("smallint");

                    b.Property<int?>("Codusu")
                        .HasColumnType("int");

                    b.Property<string>("Con")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Consecutivo")
                        .HasColumnType("int");

                    b.Property<string>("Den")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool?>("Esenergas")
                        .HasColumnType("bit");

                    b.Property<string>("MdVenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tem")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tipven")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<short?>("codgru")
                        .HasColumnType("smallint");

                    b.Property<bool?>("precioSemanal")
                        .HasColumnType("bit");

                    b.HasKey("Cod");

                    b.HasIndex("codgru");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Contacto", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod"));

                    b.Property<int?>("CodCte")
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cod");

                    b.HasIndex("CodCte");

                    b.ToTable("Contacto");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Descarga", b =>
                {
                    b.Property<int>("idDescarga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idDescarga"));

                    b.Property<string>("BOL_vol20")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BOL_volN")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("bol")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("cliente")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("destino")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("diferencia")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("doc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("fac_vol20")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("fac_volN")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("factura")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("fecha_carga")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("fecha_descarga")
                        .HasColumnType("datetime2");

                    b.Property<string>("foto_1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("fto")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("operador")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("placa_autotanque")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("placa_tracto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("producto")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("sellos")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("sellos_coincide")
                        .HasColumnType("int");

                    b.Property<string>("terminal_origen")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("tipo")
                        .HasColumnType("int");

                    b.Property<string>("tnq_vol20")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("tnq_volN")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("tracto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("transportista")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("venta")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("idDescarga");

                    b.ToTable("Descargas");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Destino", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Ciu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("CodGamo")
                        .HasColumnType("bigint");

                    b.Property<int?>("CodbdTan")
                        .HasColumnType("int");

                    b.Property<short?>("Codciu")
                        .HasColumnType("smallint");

                    b.Property<int?>("Codcte")
                        .HasColumnType("int");

                    b.Property<string>("Codsyn")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Den")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("DesCod")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Dir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Esenergas")
                        .HasColumnType("bit");

                    b.Property<string>("Est")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Lat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Lon")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nroper")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Num")
                        .HasColumnType("int");

                    b.HasKey("Cod");

                    b.HasIndex("Codcte");

                    b.ToTable("Destino");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Entidad", b =>
                {
                    b.Property<int>("cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cod"));

                    b.Property<string>("den")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("fch")
                        .HasColumnType("datetime2");

                    b.HasKey("cod");

                    b.ToTable("Entidad");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Estado", b =>
                {
                    b.Property<byte>("Cod")
                        .HasColumnType("tinyint");

                    b.Property<string>("den")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Cod");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.FormaPago", b =>
                {
                    b.Property<int>("cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cod"));

                    b.Property<string>("den")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("cod");

                    b.ToTable("FormaPago");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Grupo", b =>
                {
                    b.Property<short>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Cod"));

                    b.Property<string>("Den")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Eje")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Fch")
                        .HasColumnType("datetime2");

                    b.Property<string>("MdVenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipven")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Cod");

                    b.ToTable("Grupo");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.GrupoUsuario", b =>
                {
                    b.Property<int>("cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cod"));

                    b.Property<int>("codgru")
                        .HasColumnType("int");

                    b.Property<int>("codusu")
                        .HasColumnType("int");

                    b.Property<DateTime>("fch")
                        .HasColumnType("datetime2");

                    b.HasKey("cod");

                    b.ToTable("GrupoUsuario");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Inventario", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod"));

                    b.Property<int?>("Codprd")
                        .HasColumnType("int");

                    b.Property<float?>("Com")
                        .HasColumnType("real");

                    b.Property<DateTime?>("Fch")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fchcom")
                        .HasColumnType("datetime2");

                    b.Property<float?>("Ful")
                        .HasColumnType("real");

                    b.Property<float?>("Invini")
                        .HasColumnType("real");

                    b.Property<string>("Pro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cod");

                    b.ToTable("Inventario");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Log", b =>
                {
                    b.Property<int>("cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cod"));

                    b.Property<int?>("codusu")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fch")
                        .HasColumnType("datetime2");

                    b.HasKey("cod");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.OrdEmbDet", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod"));

                    b.Property<int?>("Bol")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("Codusu")
                        .HasColumnType("int");

                    b.Property<int>("Codusumod")
                        .HasColumnType("int");

                    b.Property<string>("Eta")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime?>("Fch")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FchDoc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fchlleest")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fchmod")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fchrealledes")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Litent")
                        .HasColumnType("float");

                    b.Property<string>("Loc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obs")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Cod");

                    b.ToTable("OrdEmbDet");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Orden", b =>
                {
                    b.Property<long?>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long?>("Cod"));

                    b.Property<int?>("BatchId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Bolguiid")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Codchf")
                        .HasColumnType("int");

                    b.Property<int?>("Coddes")
                        .HasColumnType("int");

                    b.Property<byte?>("Codest")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Codprd")
                        .HasColumnType("tinyint");

                    b.Property<int?>("Codprd2")
                        .HasColumnType("int");

                    b.Property<int?>("Coduni")
                        .HasColumnType("int");

                    b.Property<int?>("CompartmentId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Dendes")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("Fch")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fchcar")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Folio")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<long?>("Liniteid")
                        .HasColumnType("bigint");

                    b.Property<string>("Ref")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("SealNumber")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<double?>("Vol")
                        .HasColumnType("float");

                    b.Property<double?>("Vol2")
                        .HasColumnType("float");

                    b.HasKey("Cod");

                    b.HasAlternateKey("BatchId");

                    b.HasIndex("Codchf");

                    b.HasIndex("Coddes");

                    b.HasIndex("Codest");

                    b.HasIndex("Codprd");

                    b.HasIndex("Coduni");

                    b.ToTable("Orden");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.OrdenCierre", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "cod");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod"));

                    b.Property<bool?>("Activa")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "Activa");

                    b.Property<int?>("CodCon")
                        .HasColumnType("int");

                    b.Property<int?>("CodCte")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "codCte");

                    b.Property<int?>("CodDes")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "codDes");

                    b.Property<short?>("CodGru")
                        .HasColumnType("smallint")
                        .HasAnnotation("Relational:JsonPropertyName", "codGru");

                    b.Property<int?>("CodPed")
                        .HasColumnType("int");

                    b.Property<byte?>("CodPrd")
                        .HasColumnType("tinyint")
                        .HasAnnotation("Relational:JsonPropertyName", "codPrd");

                    b.Property<bool?>("Confirmada")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "confirmada");

                    b.Property<bool?>("Estatus")
                        .HasColumnType("bit")
                        .HasAnnotation("Relational:JsonPropertyName", "estatus");

                    b.Property<DateTime?>("FchCierre")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "fchCierre");

                    b.Property<DateTime?>("FchLlegada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FchVencimiento")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "fchVencimiento");

                    b.Property<string>("Folio")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "folio");

                    b.Property<string>("ModeloVenta")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "modeloVenta");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "observaciones");

                    b.Property<double>("Precio")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "precio");

                    b.Property<string>("TipoPago")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "tipoPago");

                    b.Property<string>("TipoVenta")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "tipoVenta");

                    b.Property<string>("Turno")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "turno");

                    b.Property<string>("Vendedor")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "vendedor");

                    b.Property<int?>("Volumen")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "volumen");

                    b.Property<DateTime?>("fchPrecio")
                        .HasColumnType("datetime2");

                    b.HasKey("Cod");

                    b.HasIndex("CodCon");

                    b.HasIndex("CodCte");

                    b.HasIndex("CodDes");

                    b.HasIndex("CodGru")
                        .IsUnique()
                        .HasFilter("[CodGru] IS NOT NULL");

                    b.HasIndex("CodPed")
                        .IsUnique()
                        .HasFilter("[CodPed] IS NOT NULL");

                    b.HasIndex("CodPrd");

                    b.ToTable("OrdenCierre");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.OrdenCompra", b =>
                {
                    b.Property<int>("cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cod"));

                    b.Property<string>("den")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("cod");

                    b.ToTable("OrdenCompra");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.OrdenEmbarque", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod"));

                    b.Property<int?>("Bin")
                        .HasColumnType("int");

                    b.Property<string>("Bolguidid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Codchf")
                        .HasColumnType("int");

                    b.Property<int?>("Coddes")
                        .HasColumnType("int");

                    b.Property<byte?>("Codest")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CodordCom")
                        .HasColumnType("int");

                    b.Property<byte?>("Codprd")
                        .HasColumnType("tinyint");

                    b.Property<short?>("Codtad")
                        .HasColumnType("smallint");

                    b.Property<int?>("Codton")
                        .HasColumnType("int");

                    b.Property<int?>("Codusu")
                        .HasColumnType("int");

                    b.Property<int?>("Compartment")
                        .HasColumnType("int");

                    b.Property<int?>("CompartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FchOrd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FchPro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fchcar")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fchpet")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Folio")
                        .HasColumnType("int");

                    b.Property<int?>("NumTonel")
                        .HasColumnType("int");

                    b.Property<double?>("Pre")
                        .HasColumnType("float");

                    b.Property<bool?>("Tp")
                        .HasColumnType("bit");

                    b.Property<double?>("Vol")
                        .HasColumnType("float");

                    b.HasKey("Cod");

                    b.HasIndex("Codchf");

                    b.HasIndex("Coddes");

                    b.HasIndex("Codest");

                    b.HasIndex("CodordCom");

                    b.HasIndex("Codprd");

                    b.HasIndex("Codtad");

                    b.HasIndex("Codton");

                    b.HasIndex("Folio", "CompartmentId")
                        .IsUnique()
                        .HasFilter("[Folio] IS NOT NULL AND [CompartmentId] IS NOT NULL");

                    b.ToTable("OrdenEmbarque");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.OrdenPedido", b =>
                {
                    b.Property<int?>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Cod"));

                    b.Property<int?>("CodPed")
                        .HasColumnType("int");

                    b.Property<string>("Folio")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cod");

                    b.HasIndex("CodPed")
                        .IsUnique()
                        .HasFilter("[CodPed] IS NOT NULL");

                    b.ToTable("OrdenPedido");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Pipa", b =>
                {
                    b.Property<int>("cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cod"));

                    b.Property<int?>("cap")
                        .HasColumnType("int");

                    b.Property<int?>("codest")
                        .HasColumnType("int");

                    b.Property<int?>("codtransp")
                        .HasColumnType("int");

                    b.Property<string>("cve")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("nroeco")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("placa")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("cod");

                    b.ToTable("Pipa");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Porcentaje", b =>
                {
                    b.Property<int?>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Cod"));

                    b.Property<string>("Accion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Porcen")
                        .HasColumnType("float");

                    b.HasKey("Cod");

                    b.ToTable("Porcentaje");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Precio", b =>
                {
                    b.Property<int?>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Cod"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FchActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FchDia")
                        .HasColumnType("datetime2");

                    b.Property<double>("Pre")
                        .HasColumnType("float");

                    b.Property<int?>("codCte")
                        .HasColumnType("int");

                    b.Property<int?>("codDes")
                        .HasColumnType("int");

                    b.Property<short?>("codGru")
                        .HasColumnType("smallint");

                    b.Property<byte?>("codPrd")
                        .HasColumnType("tinyint");

                    b.Property<int?>("codZona")
                        .HasColumnType("int");

                    b.HasKey("Cod");

                    b.HasIndex("codCte");

                    b.HasIndex("codDes");

                    b.HasIndex("codPrd");

                    b.HasIndex("codZona");

                    b.ToTable("Precio");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.PrecioHistorico", b =>
                {
                    b.Property<int?>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Cod"));

                    b.Property<DateTime>("FchActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FchDia")
                        .HasColumnType("datetime2");

                    b.Property<int?>("codCte")
                        .HasColumnType("int");

                    b.Property<int?>("codDes")
                        .HasColumnType("int");

                    b.Property<short?>("codGru")
                        .HasColumnType("smallint");

                    b.Property<byte?>("codPrd")
                        .HasColumnType("tinyint");

                    b.Property<int?>("codZona")
                        .HasColumnType("int");

                    b.Property<double?>("pre")
                        .HasColumnType("float");

                    b.HasKey("Cod");

                    b.HasIndex("codCte");

                    b.HasIndex("codDes");

                    b.HasIndex("codPrd");

                    b.HasIndex("codZona");

                    b.ToTable("PreciosHistorico");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.PrecioProgramado", b =>
                {
                    b.Property<int?>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Cod"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FchActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FchDia")
                        .HasColumnType("datetime2");

                    b.Property<double>("Pre")
                        .HasColumnType("float");

                    b.Property<int?>("codCte")
                        .HasColumnType("int");

                    b.Property<int?>("codDes")
                        .HasColumnType("int");

                    b.Property<short?>("codGru")
                        .HasColumnType("smallint");

                    b.Property<byte?>("codPrd")
                        .HasColumnType("tinyint");

                    b.Property<int?>("codZona")
                        .HasColumnType("int");

                    b.HasKey("Cod");

                    b.HasIndex("codCte");

                    b.HasIndex("codDes");

                    b.HasIndex("codPrd");

                    b.HasIndex("codZona");

                    b.ToTable("PrecioProgramado");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Privilegio", b =>
                {
                    b.Property<int>("cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cod"));

                    b.Property<bool?>("act")
                        .HasColumnType("bit");

                    b.Property<string>("pri")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("cod");

                    b.ToTable("Privilegio");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.PrivilegioUsuario", b =>
                {
                    b.Property<int>("cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cod"));

                    b.Property<bool?>("activo")
                        .HasColumnType("bit");

                    b.Property<int?>("codpri")
                        .HasColumnType("int");

                    b.Property<int?>("codusu")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fch")
                        .HasColumnType("datetime2");

                    b.HasKey("cod");

                    b.ToTable("PrivilegioUsuario");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Producto", b =>
                {
                    b.Property<byte>("Cod")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codsyn")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Den")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Cod");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Tad", b =>
                {
                    b.Property<short>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Cod"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Den")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<short?>("Nro")
                        .HasColumnType("smallint");

                    b.HasKey("Cod");

                    b.ToTable("Tad");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Tonel", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Capcom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Capcom2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Capcom3")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Capcom4")
                        .HasColumnType("int");

                    b.Property<string>("Carid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Codsyn")
                        .HasColumnType("int");

                    b.Property<bool?>("Gps")
                        .HasColumnType("bit");

                    b.Property<int?>("Idcom")
                        .HasColumnType("int");

                    b.Property<int?>("Idcom2")
                        .HasColumnType("int");

                    b.Property<int?>("Idcom3")
                        .HasColumnType("int");

                    b.Property<int?>("Idcom4")
                        .HasColumnType("int");

                    b.Property<int?>("Nrocom")
                        .HasColumnType("int");

                    b.Property<int?>("Nrocom2")
                        .HasColumnType("int");

                    b.Property<int?>("Nrocom3")
                        .HasColumnType("int");

                    b.Property<int?>("Nrocom4")
                        .HasColumnType("int");

                    b.Property<string>("Placa")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Placatracto")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tracto")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Cod");

                    b.HasIndex("Carid");

                    b.ToTable("Tonel");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Transportista", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Busentid")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CarrId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Den")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Gru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Simsa")
                        .HasColumnType("bit");

                    b.HasKey("Cod");

                    b.ToTable("Transportista");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.TransportistaGrupo", b =>
                {
                    b.Property<int>("cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cod"));

                    b.Property<int>("codgru")
                        .HasColumnType("int");

                    b.Property<int>("codtra")
                        .HasColumnType("int");

                    b.Property<DateTime>("fch")
                        .HasColumnType("datetime2");

                    b.HasKey("cod");

                    b.ToTable("TransportistaGrupo");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Usuario", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("CodCte")
                        .HasColumnType("int");

                    b.Property<short?>("CodGru")
                        .HasColumnType("smallint");

                    b.Property<string>("Cve")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Den")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<byte?>("Est")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Fch")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsClient")
                        .HasColumnType("bit");

                    b.Property<string>("Privilegio")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<byte?>("Tip")
                        .HasColumnType("tinyint");

                    b.Property<string>("Usu")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Cod");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Version", b =>
                {
                    b.Property<int>("cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cod"));

                    b.Property<bool?>("act")
                        .HasColumnType("bit");

                    b.Property<string>("car")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("fchlib")
                        .HasColumnType("datetime2");

                    b.Property<string>("ver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("cod");

                    b.ToTable("Version");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Zona", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cod");

                    b.ToTable("Zona");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.ZonaCliente", b =>
                {
                    b.Property<int>("Cod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod"));

                    b.Property<bool?>("Activo")
                        .HasColumnType("bit");

                    b.Property<int?>("CteCod")
                        .HasColumnType("int");

                    b.Property<int?>("DesCod")
                        .HasColumnType("int");

                    b.Property<int?>("ZonaCod")
                        .HasColumnType("int");

                    b.HasKey("Cod");

                    b.HasIndex("CteCod");

                    b.HasIndex("DesCod");

                    b.HasIndex("ZonaCod");

                    b.ToTable("ZonaCliente");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.users_descarga", b =>
                {
                    b.Property<int>("iduser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("iduser"));

                    b.Property<bool?>("estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("fecha_creacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idDestino")
                        .HasColumnType("int");

                    b.Property<string>("pass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("tipo")
                        .HasColumnType("bit");

                    b.Property<string>("usuario")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("iduser");

                    b.ToTable("users_descargas");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.AccionCorreo", b =>
                {
                    b.HasOne("GComFuelManager.Shared.Modelos.Accion", "Accion")
                        .WithMany()
                        .HasForeignKey("CodAccion");

                    b.HasOne("GComFuelManager.Shared.Modelos.Contacto", "Contacto")
                        .WithMany("AccionCorreos")
                        .HasForeignKey("CodContacto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accion");

                    b.Navigation("Contacto");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Cliente", b =>
                {
                    b.HasOne("GComFuelManager.Shared.Modelos.Grupo", null)
                        .WithMany("Clientes")
                        .HasForeignKey("codgru");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Contacto", b =>
                {
                    b.HasOne("GComFuelManager.Shared.Modelos.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("CodCte");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Destino", b =>
                {
                    b.HasOne("GComFuelManager.Shared.Modelos.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("Codcte");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Orden", b =>
                {
                    b.HasOne("GComFuelManager.Shared.Modelos.OrdEmbDet", "OrdEmbDet")
                        .WithOne("Orden")
                        .HasForeignKey("GComFuelManager.Shared.Modelos.Orden", "BatchId")
                        .HasPrincipalKey("GComFuelManager.Shared.Modelos.OrdEmbDet", "Bol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GComFuelManager.Shared.Modelos.Chofer", "Chofer")
                        .WithMany()
                        .HasForeignKey("Codchf");

                    b.HasOne("GComFuelManager.Shared.Modelos.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("Coddes");

                    b.HasOne("GComFuelManager.Shared.Modelos.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Codest");

                    b.HasOne("GComFuelManager.Shared.Modelos.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Codprd");

                    b.HasOne("GComFuelManager.Shared.Modelos.Tonel", "Tonel")
                        .WithMany()
                        .HasForeignKey("Coduni");

                    b.Navigation("Chofer");

                    b.Navigation("Destino");

                    b.Navigation("Estado");

                    b.Navigation("OrdEmbDet");

                    b.Navigation("Producto");

                    b.Navigation("Tonel");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.OrdenCierre", b =>
                {
                    b.HasOne("GComFuelManager.Shared.Modelos.Contacto", "ContactoN")
                        .WithMany()
                        .HasForeignKey("CodCon");

                    b.HasOne("GComFuelManager.Shared.Modelos.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("CodCte");

                    b.HasOne("GComFuelManager.Shared.Modelos.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("CodDes");

                    b.HasOne("GComFuelManager.Shared.Modelos.Grupo", "Grupo")
                        .WithOne()
                        .HasForeignKey("GComFuelManager.Shared.Modelos.OrdenCierre", "CodGru");

                    b.HasOne("GComFuelManager.Shared.Modelos.OrdenEmbarque", "OrdenEmbarque")
                        .WithOne("OrdenCierre")
                        .HasForeignKey("GComFuelManager.Shared.Modelos.OrdenCierre", "CodPed");

                    b.HasOne("GComFuelManager.Shared.Modelos.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("CodPrd");

                    b.Navigation("Cliente");

                    b.Navigation("ContactoN");

                    b.Navigation("Destino");

                    b.Navigation("Grupo");

                    b.Navigation("OrdenEmbarque");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.OrdenEmbarque", b =>
                {
                    b.HasOne("GComFuelManager.Shared.Modelos.Chofer", "Chofer")
                        .WithMany()
                        .HasForeignKey("Codchf");

                    b.HasOne("GComFuelManager.Shared.Modelos.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("Coddes");

                    b.HasOne("GComFuelManager.Shared.Modelos.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("Codest");

                    b.HasOne("GComFuelManager.Shared.Modelos.OrdenCompra", "OrdenCompra")
                        .WithMany()
                        .HasForeignKey("CodordCom");

                    b.HasOne("GComFuelManager.Shared.Modelos.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("Codprd");

                    b.HasOne("GComFuelManager.Shared.Modelos.Tad", "Tad")
                        .WithMany()
                        .HasForeignKey("Codtad");

                    b.HasOne("GComFuelManager.Shared.Modelos.Tonel", "Tonel")
                        .WithMany()
                        .HasForeignKey("Codton");

                    b.HasOne("GComFuelManager.Shared.Modelos.Orden", "Orden")
                        .WithOne("OrdenEmbarque")
                        .HasForeignKey("GComFuelManager.Shared.Modelos.OrdenEmbarque", "Folio", "CompartmentId")
                        .HasPrincipalKey("GComFuelManager.Shared.Modelos.Orden", "Folio", "CompartmentId");

                    b.Navigation("Chofer");

                    b.Navigation("Destino");

                    b.Navigation("Estado");

                    b.Navigation("Orden");

                    b.Navigation("OrdenCompra");

                    b.Navigation("Producto");

                    b.Navigation("Tad");

                    b.Navigation("Tonel");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.OrdenPedido", b =>
                {
                    b.HasOne("GComFuelManager.Shared.Modelos.OrdenEmbarque", "OrdenEmbarque")
                        .WithOne("OrdenPedido")
                        .HasForeignKey("GComFuelManager.Shared.Modelos.OrdenPedido", "CodPed");

                    b.Navigation("OrdenEmbarque");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Precio", b =>
                {
                    b.HasOne("GComFuelManager.Shared.Modelos.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("codCte");

                    b.HasOne("GComFuelManager.Shared.Modelos.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("codDes");

                    b.HasOne("GComFuelManager.Shared.Modelos.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("codPrd");

                    b.HasOne("GComFuelManager.Shared.Modelos.Zona", "Zona")
                        .WithMany()
                        .HasForeignKey("codZona");

                    b.Navigation("Cliente");

                    b.Navigation("Destino");

                    b.Navigation("Producto");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.PrecioHistorico", b =>
                {
                    b.HasOne("GComFuelManager.Shared.Modelos.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("codCte");

                    b.HasOne("GComFuelManager.Shared.Modelos.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("codDes");

                    b.HasOne("GComFuelManager.Shared.Modelos.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("codPrd");

                    b.HasOne("GComFuelManager.Shared.Modelos.Zona", "Zona")
                        .WithMany()
                        .HasForeignKey("codZona");

                    b.Navigation("Cliente");

                    b.Navigation("Destino");

                    b.Navigation("Producto");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.PrecioProgramado", b =>
                {
                    b.HasOne("GComFuelManager.Shared.Modelos.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("codCte");

                    b.HasOne("GComFuelManager.Shared.Modelos.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("codDes");

                    b.HasOne("GComFuelManager.Shared.Modelos.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("codPrd");

                    b.HasOne("GComFuelManager.Shared.Modelos.Zona", "Zona")
                        .WithMany()
                        .HasForeignKey("codZona");

                    b.Navigation("Cliente");

                    b.Navigation("Destino");

                    b.Navigation("Producto");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Tonel", b =>
                {
                    b.HasOne("GComFuelManager.Shared.Modelos.Transportista", "Transportista")
                        .WithMany()
                        .HasForeignKey("Carid")
                        .HasPrincipalKey("CarrId");

                    b.Navigation("Transportista");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.ZonaCliente", b =>
                {
                    b.HasOne("GComFuelManager.Shared.Modelos.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("CteCod");

                    b.HasOne("GComFuelManager.Shared.Modelos.Destino", "Destino")
                        .WithMany()
                        .HasForeignKey("DesCod");

                    b.HasOne("GComFuelManager.Shared.Modelos.Zona", "Zona")
                        .WithMany()
                        .HasForeignKey("ZonaCod");

                    b.Navigation("Cliente");

                    b.Navigation("Destino");

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("GComFuelManager.Server.Identity.IdentityUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("GComFuelManager.Server.Identity.IdentityUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GComFuelManager.Server.Identity.IdentityUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("GComFuelManager.Server.Identity.IdentityUsuario", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Contacto", b =>
                {
                    b.Navigation("AccionCorreos");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Grupo", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.OrdEmbDet", b =>
                {
                    b.Navigation("Orden");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.Orden", b =>
                {
                    b.Navigation("OrdenEmbarque");
                });

            modelBuilder.Entity("GComFuelManager.Shared.Modelos.OrdenEmbarque", b =>
                {
                    b.Navigation("OrdenCierre");

                    b.Navigation("OrdenPedido");
                });
#pragma warning restore 612, 618
        }
    }
}
