@page "/crm/equipo/{Id:int}"

@inject IRepositorio http
@inject SweetAlertService swal
@inject NavigationManager navigation
@attribute [Authorize(Roles = "Admin, VER_DETALLE_EQUIPO")]

<AuthorizeView Roles="Admin, VER_DETALLE_EQUIPO">
    <Authorized>
        <Card LoadingContent="loading_info">
            <Header>
                <div class="col-12 d-flex justify-content-between">
                    <b>Detalle de equipo</b>
                    <button class="g-1 btn gcom-bg-amarillo" onclick="history.back();">
                        <i class="fa fa-solid fa-arrow-left" /> Volver
                    </button>
                </div>
            </Header>
            <Body>
                <Card HeaderText="Datos principales" BodyClass="col-12 row">
                    <Body>
                        <div class="col-md-4 col-12">
                            <label><b>Equipo</b></label>
                            <p>@Equipo.Nombre</p>
                        </div>
                        <div class="col-md-4 col-12">
                            <label><b>Lider de equipo</b></label>
                            <p>@Equipo.Originador.Nombre @Equipo.Originador.Apellidos</p>
                        </div>
                        <div class="col-md-4 col-12">
                            <label><b>Telefono movil</b></label>
                            <p>@Equipo.Originador.Tel_Movil</p>
                        </div>
                        <div class="col-md-4 col-12">
                            <label><b>Correo electronico</b></label>
                            <p>@Equipo.Originador.Correo</p>
                        </div>
                        <div class="col-md-4 col-12">
                            <label><b>Division</b></label>
                            <p>@Equipo.Division.Nombre</p>
                        </div>
                    </Body>
                </Card>
                <Card HeaderText="Integrantes de equipo" BodyClass="g-1">
                    <Body>
                        <label><b>Lider de equipo</b></label>
                        <div class="container-fluid overflow-scroll">
                            <Tabla Datos="Lider">
                                <Cabeceras>
                                    <tr>
                                        <th>Nombre</th>
                                        <th>Division</th>
                                        <th>Correo</th>
                                        <th>Telefono movil</th>
                                    </tr>
                                </Cabeceras>
                                <Columnas Context="item">
                                    <tr>
                                        <AuthorizeView Roles="Admin, VER_DETALLE_COMERCIAL">
                                            <Authorized Context="VERCOMERCIAL">
                                                <td>
                                                    <NavLink class="btn gcom-bg-amarillo" href=@($"crm/originador/{item.Id}")>
                                                        <td>@item.Nombre @item.Apellidos</td>
                                                    </NavLink>
                                                </td>
                                            </Authorized>
                                            <NotAuthorized Context="VERCOMERCIAL">
                                                <td>@item.Nombre @item.Apellidos</td>
                                            </NotAuthorized>
                                        </AuthorizeView>
                                        <td>@item.NombreDivision</td>
                                        <td>@item.Correo</td>
                                        <td>@item.Tel_Movil</td>
                                    </tr>
                                </Columnas>
                            </Tabla>
                        </div>

                        <label><b>Vendedores</b></label>
                        <div class="container-fluid overflow-scroll">
                            <Tabla Datos="Vendedores">
                                <Cabeceras>
                                    <tr>
                                        <th>Nombre</th>
                                        <th>Division</th>
                                        <th>Correo</th>
                                        <th>Telefono movil</th>
                                    </tr>
                                </Cabeceras>
                                <Filtros>
                                    <tr>
                                        <td>
                                            <input class="form-control" @bind-value="filtroVendedor.Nombre" @oninput="@((args)=>FiltrarParametrosVendedor(args, nameof(CRMVendedorDTO.Nombre)))" />
                                        </td>
                                        <td>
                                            <input class="form-control" @bind-value="filtroVendedor.NombreDivision" @oninput="@((args)=>FiltrarParametrosVendedor(args, nameof(CRMVendedorDTO.NombreDivision)))" />
                                        </td>
                                        <td>
                                            <input class="form-control" @bind-value="filtroVendedor.Correo" @oninput="@((args)=>FiltrarParametrosVendedor(args, nameof(CRMVendedorDTO.Correo)))" />
                                        </td>
                                        <td>
                                            <input class="form-control" @bind-value="filtroVendedor.Tel_Movil" @oninput="@((args)=>FiltrarParametrosVendedor(args, nameof(CRMVendedorDTO.Tel_Movil)))" />
                                        </td>
                                    </tr>
                                </Filtros>
                                <Columnas Context="item">
                                    <tr>
                                        <AuthorizeView Roles="Admin, VER_DETALLE_VENDEDORES">
                                            <Authorized Context="VERVENDEDOR">
                                                <td>
                                                    <NavLink href=@($"crm/vendedor/{item.Id}")>
                                                        @item.Fullname
                                                    </NavLink>
                                                </td>
                                            </Authorized>
                                            <NotAuthorized Context="VERVENDEDOR">
                                                <td>@item.Fullname</td>
                                            </NotAuthorized>
                                        </AuthorizeView>
                                        <td>@item.NombreDivision</td>
                                        <td>@item.Correo</td>
                                        <td>@item.Tel_Movil</td>
                                    </tr>
                                </Columnas>
                            </Tabla>
                        </div>
                    </Body>
                </Card>
                <div class="col-12">
                    <PaginacionComponent PaginaActual="filtroVendedor.Pagina_ACtual" PaginasTotales="filtroVendedor.Total_paginas"
                                         Radio="5" PaginaSeleccionada="Pagina_Seleccionada" />
                </div>
            </Body>
        </Card>
    </Authorized>
    <NotAuthorized>
        <NoAutorizado />
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter] public int Id { get; set; } = 0;
    bool loading_info = false;
    CRMEquipoDetalleDTO Equipo = new();
    List<CRMOriginadorDTO> Lider = new();

    Dictionary<string, string> query = new();
    CRMVendedorDTO filtroVendedor = new();
    List<CRMVendedorDTO> Vendedores = new();

    protected override async Task OnParametersSetAsync()
    {
        await Obtener();
        await ObtenerVendedor();
    }

    private async Task Obtener()
    {
        try
        {
            loading_info = true;
            var response = await http.Get<CRMEquipoDetalleDTO>($"api/crmequipo/{Id}/detalle");
            if (response.Error)
            {
                loading_info = false;
                var message = await response.ObtenerMensajeError();
                await swal.FireAsync("Error", message, SweetAlertIcon.Error);
            }
            else
            {
                loading_info = false;
                Equipo = response.Response;
                Lider.Add(Equipo.Originador);
            }
        }
        catch (Exception e)
        {
            loading_info = false;
            await swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }

    }

    private Dictionary<string, string> SetFiltro()
    {
        query[$"{nameof(filtroVendedor.Nombre)}"] = filtroVendedor.Nombre;
        query[$"{nameof(filtroVendedor.Tel_Movil)}"] = filtroVendedor.Tel_Movil;
        query[$"{nameof(filtroVendedor.Correo)}"] = filtroVendedor.Correo;
        query[$"{nameof(filtroVendedor.Pagina)}"] = filtroVendedor.Pagina.ToString();
        query[$"{nameof(filtroVendedor.EquipoId)}"] = Id.ToString();
        query[$"{nameof(filtroVendedor.Registros_por_pagina)}"] = filtroVendedor.Registros_por_pagina.ToString();
        query[nameof(filtroVendedor.Paginacion)] = true.ToString();
        return query;
    }

    private async Task ObtenerVendedor()
    {
        try
        {
            loading_info = true;
            var uri = Constructor_De_URL_Parametros.Generar_URL(SetFiltro());

            var response = await http.Get<List<CRMVendedorDTO>>($"api/crmvendedor?{uri}");
            if (response.Error)
            {
                loading_info = false;
                var message = await response.ObtenerMensajeError();
                await swal.FireAsync("Error", message, SweetAlertIcon.Error);
            }
            else
            {
                loading_info = false;
                Vendedores = response.Response;

                filtroVendedor.Total_paginas = Constructor_De_URL_Parametros.Obt_Total_Paginas(response.HttpResponseMessage);
                filtroVendedor.Total_registros = Constructor_De_URL_Parametros.Obt_Total_Registros(response.HttpResponseMessage);
                filtroVendedor.Pagina_ACtual = Constructor_De_URL_Parametros.Obt_Pagina_Actual(response.HttpResponseMessage);
            }
        }
        catch (Exception e)
        {
            loading_info = false;
            await swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }
    }

    private async Task FiltrarParametrosVendedor(ChangeEventArgs args, string param)
    {
        switch (param)
        {
            case nameof(CRMVendedorDTO.Nombre):
                filtroVendedor.Nombre = args.Value?.ToString() ?? string.Empty;
                break;
            case nameof(CRMVendedorDTO.Correo):
                filtroVendedor.Correo = args.Value?.ToString() ?? string.Empty;
                break;
            case nameof(CRMVendedorDTO.Tel_Movil):
                filtroVendedor.Tel_Movil = args.Value?.ToString() ?? string.Empty;
                break;
            default:
                break;
        }
        await ObtenerVendedor();
    }

    private async Task Pagina_Seleccionada(int pagina)
    {
        filtroVendedor.Pagina_ACtual = pagina;
        filtroVendedor.Pagina = pagina;

        await ObtenerVendedor();
    }
}
