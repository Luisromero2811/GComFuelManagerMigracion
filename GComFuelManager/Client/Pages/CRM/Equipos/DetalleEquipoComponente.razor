@page "/crm/equipo/{Id:int}"

@inject IRepositorio http
@inject SweetAlertService swal
@inject NavigationManager navigation
@attribute [Authorize]

<AuthorizeView>
    <Authorized>
        <Card LoadingContent="loading_info">
            <Header>
                <div class="col-12 d-flex justify-content-between">
                    <b>Detalle de equipo</b>
                    <NavLink class="g-1 btn gcom-bg-amarillo" href="crm/equipos" Match="NavLinkMatch.All">
                        <i class="fa fa-solid fa-arrow-left" /> Volver
                    </NavLink>
                </div>
            </Header>
            <Body>
                <div class="col-12 row">
                    <div class="col-md-4 col-12">
                        <label><b>Equipo</b></label>
                        <p>@Equipo.Nombre</p>
                    </div>
                    <div class="col-md-4 col-12">
                        <label><b>Lider de equipo</b></label>
                        <p>@Equipo.Nombre</p>
                    </div>
                    <div class="col-md-4 col-12">
                        <label><b>Division</b></label>
                        <p>@Equipo.Nombre</p>
                    </div>
                    <div class="col-12">
                        <Card HeaderText="´Permisos asignados">
                            <Body>
                                <Tabla Datos="Equipo.Vendedores">
                                    <Cabeceras>
                                        <tr>
                                            <th>Nombre</th>
                                        </tr>
                                    </Cabeceras>
                                    <Columnas Context="item">
                                        <tr>
                                            <td>@item.Nombre</td>
                                        </tr>
                                    </Columnas>
                                </Tabla>
                            </Body>
                        </Card>
                    </div>
                </div>
            </Body>
        </Card>
    </Authorized>
    <NotAuthorized>
        <NoAutorizado />
    </NotAuthorized>
</AuthorizeView>

@code {
    [Parameter] public int Id { get; set; } = 0;
    bool loading_info = false;
    CRMEquipoDetalleDTO Equipo = new();

    protected override async Task OnParametersSetAsync()
    {
        await Obtener();
    }

    private async Task Obtener()
    {
        try
        {
            loading_info = true;
            var response = await http.Get<CRMEquipoDetalleDTO>($"api/crmequipo/{Id}/detalle");
            if (response.Error)
            {
                loading_info = false;
                var message = await response.ObtenerMensajeError();
                await swal.FireAsync("Error", message, SweetAlertIcon.Error);
            }
            else
            {
                loading_info = false;
                Equipo = response.Response;
            }
        }
        catch (Exception e)
        {
            loading_info = false;
            await swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }

    }
}
