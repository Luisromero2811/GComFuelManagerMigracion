@page "/crm/vendedores"
@inject IRepositorio http
@inject SweetAlertService swal
@attribute [Authorize(Roles = "Admin, VER_MODULO_VENDEDORES")]

<AuthorizeView Roles="Admin, VER_MODULO_VENDEDORES">
    <Authorized>
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <b>Vendedores (BDM)</b>
                <NavLink class="g-1 btn gcom-bg-amarillo" Match="NavLinkMatch.All" href="../">
                    <i class="fa fa-solid fa-arrow-left" />
                    Volver
                </NavLink>
            </div>
        </div>
        <AuthorizeView Roles="Admin, CREAR_VENDEDOR">
            <Authorized Context="CREARVENDEDOR">
                <div class="col-12 my-2">
                    <div class="col-md-2 col">
                        <NavLink Match="NavLinkMatch.All" href="crm/vendedores/formulario" class="btn btn-sm gcom-bg-amarillo col-12 g-1">
                            <i class="fa fa-solid fa-plus" /> Agregar
                        </NavLink>
                    </div>
                </div>
            </Authorized>
        </AuthorizeView>
        <AuthorizeView Roles="Admin, VER_VENDEDORES">
            <Authorized Context="VERVENDEDORES">
                <div class="ancho-tabla">
                    <Tabla Datos="Vendedores">
                        <Cabeceras>
                            <tr>
                                <AuthorizeView Roles="Admin, EDITAR_VENDEDOR, ELIMINAR_VENDEDOR, VER_DETALLE_VENDEDORES">
                                    <Authorized Context="ACCIONES">
                                        <th></th>
                                    </Authorized>
                                </AuthorizeView>
                                <th>Nombre de vendedor</th>
                                <th>Teléfono móvil</th>
                                <th>Correo electrónico</th>
                                <th>Division</th>
                            </tr>
                        </Cabeceras>
                        <Filtros>
                            <tr>
                                <AuthorizeView Roles="Admin, EDITAR_VENDEDOR, ELIMINAR_VENDEDOR, VER_DETALLE_VENDEDORES">
                                    <Authorized Context="ACCIONES">
                                        <td></td>
                                    </Authorized>
                                </AuthorizeView>
                                <td><input class="form-control" @bind-value="@filtro.Nombre" @oninput="FiltrarNombre" /></td>
                                <td><input class="form-control" @bind-value="@filtro.Tel_Movil" @oninput="FiltrarTelefono" /></td>
                                <td><input class="form-control" @bind-value="@filtro.Correo" @oninput="FiltrarCorreo" /></td>
                                <td></td>
                            </tr>
                        </Filtros>
                        <Columnas Context="item">
                            <tr>
                                <AuthorizeView Roles="Admin, EDITAR_VENDEDOR, ELIMINAR_VENDEDOR, VER_DETALLE_VENDEDORES">
                                    <Authorized Context="ACCIONES">
                                        <td>
                                            <div class="btn-group">
                                                <AuthorizeView Roles="Admin, EDITAR_VENDEDOR">
                                                    <Authorized Context="EDITARVENDEDOR">
                                                        <NavLink class="btn gcom-bg-amarillo" href=@($"/crm/vendedores/formulario/{item.Id}")>
                                                            <i class="fa fa-solid fa-edit" />
                                                        </NavLink>
                                                    </Authorized>
                                                </AuthorizeView>
                                                <AuthorizeView Roles="Admin, VER_DETALLE_VENDEDORES">
                                                    <Authorized Context="VERDETALLEVENDEDOR">
                                                        <NavLink class="btn gcom-bg-amarillo" href=@($"/crm/vendedor/{item.Id}")>
                                                            <i class="fa fa-solid fa-eye" />
                                                        </NavLink>
                                                    </Authorized>
                                                </AuthorizeView>
                                                <AuthorizeView Roles="Admin, ELIMINAR_VENDEDOR">
                                                    <Authorized Context="ELMINARVENDEDOR">
                                                        <button class="btn btn-danger" @onclick="@(()=>EliminarVendedor(item))">
                                                            <i class="fa fa-solid fa-trash" />
                                                        </button>
                                                    </Authorized>
                                                </AuthorizeView>
                                            </div>
                                        </td>
                                    </Authorized>
                                </AuthorizeView>
                                <td>@item.Nombre @item.Apellidos</td>
                                <td>@item.Tel_Movil </td>
                                <td>@item.Correo</td>
                                <td>@item.NombreDivision</td>
                            </tr>
                        </Columnas>
                    </Tabla>
                </div>
                <div class="col-12">
                    <PaginacionComponent PaginaActual="filtro.Pagina_ACtual" PaginasTotales="filtro.Total_paginas" PaginaSeleccionada="Pagina_Seleccionada" Radio="5" />
                    <div class="col-12">
                        <p>Total de registros: @filtro.Total_registros</p>
                    </div>
                </div>
            </Authorized>
        </AuthorizeView>
    </Authorized>
    <NotAuthorized>
        <NoAutorizado />
    </NotAuthorized>
</AuthorizeView>

@code {
    List<CRMVendedorDTO> Vendedores = new();
    CRMVendedorDTO filtro = new();
    Dictionary<string, string> query = new();

    bool loading_info = false;

    protected override async Task OnInitializedAsync()
    {
        await ObtenerVendedor();
    }

    private Dictionary<string, string> SetFiltro()
    {
        query[$"{nameof(filtro.Nombre)}"] = filtro.Nombre;
        query[$"{nameof(filtro.Tel_Movil)}"] = filtro.Tel_Movil;
        query[$"{nameof(filtro.Correo)}"] = filtro.Correo;
        query[$"{nameof(filtro.Pagina)}"] = filtro.Pagina.ToString();
        query[$"{nameof(filtro.Registros_por_pagina)}"] = filtro.Registros_por_pagina.ToString();
        query[nameof(filtro.Paginacion)] = true.ToString();
        return query;
    }

    private async Task ObtenerVendedor()
    {
        try
        {
            loading_info = true;
            var uri = Constructor_De_URL_Parametros.Generar_URL(SetFiltro());

            var response = await http.Get<List<CRMVendedorDTO>>($"api/crmvendedor?{uri}");
            if (response.Error)
            {
                loading_info = false;
                var message = await response.ObtenerMensajeError();
                await swal.FireAsync("Error", message, SweetAlertIcon.Error);
            }
            else
            {
                loading_info = false;
                Vendedores = response.Response;

                filtro.Total_paginas = Constructor_De_URL_Parametros.Obt_Total_Paginas(response.HttpResponseMessage);
                filtro.Total_registros = Constructor_De_URL_Parametros.Obt_Total_Registros(response.HttpResponseMessage);
                filtro.Pagina_ACtual = Constructor_De_URL_Parametros.Obt_Pagina_Actual(response.HttpResponseMessage);
            }
        }
        catch (Exception e)
        {
            loading_info = false;
            await swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }
    }

    private async Task FiltrarNombre(ChangeEventArgs args)
    {
        filtro.Nombre = args.Value?.ToString() ?? string.Empty;
        await ObtenerVendedor();
    }
    private async Task FiltrarCorreo(ChangeEventArgs args)
    {
        filtro.Correo = args.Value?.ToString() ?? string.Empty;
        await ObtenerVendedor();
    }
    private async Task FiltrarTelefono(ChangeEventArgs args)
    {
        filtro.Tel_Movil = args.Value?.ToString() ?? string.Empty;
        await ObtenerVendedor();
    }

    private async Task Pagina_Seleccionada(int pagina)
    {
        filtro.Pagina_ACtual = pagina;
        filtro.Pagina = pagina;

        await ObtenerVendedor();
    }

    private async Task EliminarVendedor(CRMVendedorDTO crm)
    {
        try
        {
            var confirm = await swal.FireAsync(new SweetAlertOptions
                {
                    Title = "Eliminacion",
                    Text = $"¿Desea eliminar el vendedor {crm.Fullname}?",
                    Icon = SweetAlertIcon.Warning,
                    ShowCancelButton = true,
                    ConfirmButtonText = "Aceptar",
                    CancelButtonText = "Cancelar"
                });
            if (!string.IsNullOrEmpty(confirm.Value))
            {

                var response = await http.Delete($"api/crmvendedor/{crm.Id}");
                if (response.Error)
                {
                    var message = await response.ObtenerMensajeError();
                    await swal.FireAsync("Error", message, SweetAlertIcon.Error);
                }
                else
                {
                    await ObtenerVendedor();
                }
            }
        }
        catch (Exception e)
        {
            await swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }

    }
}
