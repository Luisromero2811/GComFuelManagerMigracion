@inject IJSRuntime js
@inject IRepositorio repositorio
@inject SweetAlertService swal
@inject NotificationService ns

@page "/actualizacion"
<h4><b>Actualizacion de registros</b></h4>

<div class="col-12 d-flex justify-content-center mt-4">
    <div class="col-9 card shadow ">
        <div class="card-body">
            <div class="row p-4">
                <div class="col-12 mb-4">
                    <!--Transportista-->
                    <label>Transportista:</label>
                <RadzenDropDown @bind-Value="TransportistaSeleccionado" Data="Transportistas" TextProperty="Den"
                                AllowVirtualization="true" AllowFiltering="true"
                                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" class="col-12">
                </RadzenDropDown>
                </div>
                <div class="col-6 mb-3">
                    <div class="col-12">
                        <button class="col-12 h-100 btn shadow-sm">
                            <div class="col-12 row">
                                <div class="col-4">
                                    <img src="img/delivery-truck.png" class="img-fluid" />
                                </div>
                                <div class="col d-flex align-items-center justify-content-start">
                                    <b>Actualizar unidades</b>
                                </div>
                            </div>
                        </button>
                    </div>
                </div>
                <div class="col-6 mb-3">
                    <div class="col-12">
                        <button class="col-12 h-100 btn shadow-sm">
                            <div class="col-12 row">
                                <div class="col-4">
                                    <img src="img/worker (1).png" class="img-fluid" />
                                </div>
                                <div class="col d-flex align-items-center justify-content-start">
                                    <b>Actualizar operarios</b>
                                </div>
                            </div>
                        </button>
                    </div>
                </div>
                <div class="col-6 mb-3">
                    <div class="col-12">
                        <button class="col-12 h-100 btn shadow-sm">
                            <div class="col-12 row">
                                <div class="col-4">
                                    <img src="img/delivery-truck (1).png" class="img-fluid" />
                                </div>
                                <div class="col d-flex align-items-center justify-content-start">
                                    <b>Actualizar transportistas</b>
                                </div>
                            </div>
                        </button>
                    </div>
                </div>
                <div class="col-6 mb-3">
                    <div class="col-12">
                        <button class="col-12 h-100 btn shadow-sm">
                            <div class="col-12 row">
                                <div class="col-4">
                                    <img src="img/rating.png" class="img-fluid" />
                                </div>
                                <div class="col d-flex align-items-center justify-content-start">
                                    <b>Actualizar clientes/destinos</b>
                                </div>
                            </div>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    private OrdenEmbarque ordenEmbarque { get; set; } = new OrdenEmbarque();
    private List<OrdenEmbarque> ordens { get; set; } = new List<OrdenEmbarque>();
    //private IList<Transportista> transportistaSeleccionado { get; set; } = new List<Transportista>();

    //Helpers de desarrollo 
    private Usuario usuario { get; set; } = new Usuario();
    private string nmbr = string.Empty;


    //Listas
    private List<Transportista> Transportistas { get; set; } = null!;

    private Transportista TransportistaSeleccionado = new Transportista();

    protected override async Task OnInitializedAsync()
    {
        await GetTransportista();
    }

    public async Task GetTransportista()
    {
        var response = await repositorio.Get<List<Transportista>>("api/transportista");
        if (response.Error)
        {
            var responseHttp = await response.ObtenerMensajeError();
            await swal.FireAsync("Error", responseHttp, SweetAlertIcon.Error);
        }
        else
        {
            Transportistas = response.Response;
        }
    }

}

