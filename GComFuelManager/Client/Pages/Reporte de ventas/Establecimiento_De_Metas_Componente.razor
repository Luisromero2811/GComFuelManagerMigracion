@page "/establecer/meta"

@inject IRepositorio http
@inject SweetAlertService Swal
@inject NotificationService ms

<div class="card">
    <div class="card-header">
        <b>Establecimiento de metas</b>
    </div>
    <div class="card-body">
        <div class="col-12 row">
            <div class="col-4">
                <DropDownFilter Listado="Vendedores" TListado="Vendedor" TValue="int" Default_Placeholder="Seleccione un vendedor" FiltrarValor="Obtener_Vendedores"
                @bind-Valor="@Vendedor.Id" Propiedad_Valor="Id">
                    <RenderValue>
                        @context.Nombre
                    </RenderValue>
                    <Render>
                        @context.Nombre
                    </Render>
                </DropDownFilter>
            </div>
            <div class="col-3">
                <button class="btn btn-sm gcom-bg-amarillo" @onclick="@Obtener_Metas">
                    <b>Buscar metas</b>
                    <i class="fa fa-solid fa-magnifying-glass"></i>
                </button>
            </div>
        </div>
    </div>
</div>
<div class="ancho-tabla" style="overflow-x:scroll;">
    <table class="table table-bordered table-sm text-nowrap">
        <thead>
            <tr>
                <th>Mes</th>
                <th>Referencia</th>
                <th>Meta del mes</th>
                <th>Meta Acumulada</th>
                <th>Real</th>
                <th>Resultado del mes</th>
                <th>Cumplimiento del mes</th>
                <th>Resultado acumulado</th>
                <th>Porcentaje de cumplimiento</th>
            </tr>
        </thead>
        <tbody>
            @if (Loading_Buscar)
            {
                <SpinnerLoading />
            }
            else
            {
                <Virtualize Items="Metas_Vendedor" TItem="Metas_Vendedor" Context="item">
                    <tr>
                        <td style="width:50px"><b>@item.Nombre_Mes</b></td>
                        <td>@item.Referencia?.ToString("N2",CultureInfo.InvariantCulture)</td>
                        <td>
                            @if (item.Editar_Meta)
                            {
                                <div class="col-12 row">
                                    <div class="col-8">
                                        <input @bind-value="@item.Meta" class="form-control form-control-sm" min="0" placeholder="Meta del mes" />
                                    </div>
                                    <div class="col-4 d-flex flex-wrap">
                                        <div class="col-6">
                                            <button class="btn btn-sm btn-success">
                                                <i class="fa fa-solid fa-check"></i>
                                            </button>
                                        </div>
                                        <div class="col-6">
                                            <button class="btn btn-sm btn-danger" @onclick="@(()=>item.Editar_Meta = !item.Editar_Meta)">
                                                <i class="fa fa-solid fa-cancel"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="">
                                    <button class="btn btn-sm gcom-bg-amarillo" @onclick="@(()=>item.Editar_Meta = !item.Editar_Meta)">
                                        <i class="fa fa-solid fa-check"></i>
                                    </button>
                                </div>
                            }
                        </td>
                        <td>@item.Meta_Acumulada?.ToString("N2",CultureInfo.InvariantCulture)</td>
                        <td>@item.Venta_Real?.ToString("N2",CultureInfo.InvariantCulture)</td>
                        <td>@item.Resultado_Mes?.ToString("N2",CultureInfo.InvariantCulture)</td>
                        <td>@item.Cumplimiento_Mes?.ToString("p",CultureInfo.InvariantCulture)</td>
                        <td>@item.Resultado_Acumulado?.ToString("N2",CultureInfo.InvariantCulture)</td>
                        <td>@item.Porciento_Cumplimiento?.ToString("p",CultureInfo.InvariantCulture)</td>
                    </tr>
                </Virtualize>
            }
        </tbody>
    </table>
</div>
@code {
    List<Vendedor> Vendedores { get; set; } = new();
    Vendedor Vendedor { get; set; } = new();

    List<Metas_Vendedor> Metas_Vendedor { get; set; } = new();

    bool Loading_Buscar = false;

    protected override async Task OnInitializedAsync()
    {
        await Obtener_Vendedores(string.Empty);
    }

    private async Task Obtener_Vendedores(string value)
    {
        Dictionary<string, string> query = new();
        query["Nombre"] = value;

        var uri = Constructor_De_URL_Parametros.Generar_URL(query);

        var response = await http.Get<List<Vendedor>>($"api/vendedor/filtrar?{uri}");
        if (response.Error)
        {
            var message = await response.ObtenerMensajeError();
            await Swal.FireAsync("Error", message, SweetAlertIcon.Error);
        }
        else
        {
            Vendedores = response.Response;
        }
    }

    private async Task Obtener_Metas()
    {
        Dictionary<string, string> query = new();
        query["VendedorId"] = Vendedor.Id.ToString();

        var uri = Constructor_De_URL_Parametros.Generar_URL(query);

        var response = await http.Get<List<Metas_Vendedor>>($"api/metas?{uri}");
        if (response.Error)
        {
            var message = await response.ObtenerMensajeError();
            await Swal.FireAsync("Error", message, SweetAlertIcon.Error);
        }
        else
        {
            Metas_Vendedor = response.Response;
        }
    }

}
