@page "/porcentaje/cierre"

@inject IRepositorio repositorio
@inject SweetAlertService Swal
@inject IJSRuntime js
@inject NotificationService ns

<h3>Porcentaje para calculo de cierre</h3>

<div class="card col-12 shadow-sm">
    <div class="card-body">
        <div class="col-12 row">
            <div class="col-8">
                <label class="form-label">Porcentaje</label>
                <RadzenNumeric @bind-Value="Porcentaje.Porcen" Min="1" Max="99" class="col-12"/>
            </div>
            <div class="col-4 d-flex">
                <button class="col-12 btn gcom-bg-amarillo mt-auto" @onclick="@SendPercent">
                    <i class="fa-solid fa-percent"></i>
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    Porcentaje Porcentaje { get; set; } = new Porcentaje();

    protected override async Task OnInitializedAsync()
    {
        await GetPercent();
    }

    private async Task GetPercent()
    {
        try
        {
            var responseHttp = await repositorio.Get<Porcentaje>($"api/porcentaje/cierre");
            if (responseHttp.Error)
            {
                var respuestaHttp = await responseHttp.ObtenerMensajeError();
                await Swal.FireAsync("Error", respuestaHttp, SweetAlertIcon.Error);
            }
            else
            {
                Porcentaje = responseHttp.Response;
            }
        }
        catch (Exception e)
        {
            await Swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }
    }

    private async Task SendPercent()
    {
        try
        {
            if (Porcentaje.Porcen != 0 && Porcentaje.Porcen != null)
            {
                var responseHttp = await repositorio.Post<Porcentaje, Porcentaje>($"api/porcentaje/cierre", Porcentaje);
                if (responseHttp.Error)
                {
                    var respuestaHttp = await responseHttp.ObtenerMensajeError();
                    await Swal.FireAsync("Error", respuestaHttp, SweetAlertIcon.Error);
                }
                else
                {
                    await Swal.FireAsync("Exito", "El porcentaje ha sido registrado con exito", SweetAlertIcon.Success);
                }
            }
            else
            {
                await Swal.FireAsync("Alerta", "Ingrese un porcentaje valido", SweetAlertIcon.Warning);
            }
        }
        catch (Exception e)
        {
            await Swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }
    }

}
