@page "/asignacion/unidades"

@inject IRepositorio repositorio
@inject SweetAlertService swal

<h4><b>Asignacion de unidades</b></h4>

<div class="col-12 px-4 mt-4">
    <div class="col-12 row mb-4">
        <div class="col-6">
            <div class="col-12">
                <label><b>Editar:</b></label>
                <div class="card shadow-sm">
                    <div class="row card-body">
                        <div class="col mb-3">
                            <div class="col-12">
                                <label>Destino:</label>
                                <InputSelect class="form-select col-12" @bind-Value="DestinoSeleccionado">
                                    <option>-- seleccione una opcion --</option>
                                    @if (Destinos is null)
                                    {
                                        <option disabled>Cargando...</option>
                                    }
                                    else if (Destinos.Count == 0)
                                    {
                                        <option disabled>No hay Productos</option>
                                    }
                                    else
                                    {
                                        foreach (var item in Destinos)
                                        {
                                            <option value="@item.Cod">@item.Den</option>
                                        }
                                    }
                                </InputSelect>
                            </div>
                        </div>
                        <div class="col mb-3">
                            <label>Fecha de carga:</label>
                            <input type="date" class="form-control col-12" />
                        </div>
                        <div class="col mb-3">
                            <label>Producto:</label>
                            <InputSelect class="form-select col-12" @bind-Value="ProductoSeleccionado">
                                <option>-- seleccione una opcion --</option>
                                @if (Productos is null)
                                {
                                    <option disabled>Cargando...</option>
                                }
                                else if (Productos.Count == 0)
                                {
                                    <option disabled>No hay Productos</option>
                                }
                                else
                                {
                                    foreach (var item in Productos)
                                    {
                                        <option value="@item.Cod">@item.Den</option>
                                    }
                                }
                            </InputSelect>
                        </div>
                        <div class="col-12 d-flex justify-content-end">
                            <button class="btn gcom-bg-amarillo"><b>Guardar cambios</b></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-6">
            <div class="col-12">
                <label><b>Mostrar ordenes:</b></label>
                <div class="card shadow-sm">
                    <div class="row card-body">
                        <div class="col mb-3">
                            <label>Del:</label>
                            <InputDate @bind-Value="@Date1" class="form-control col-12" />
                        </div>
                        <div class="col mb-3">
                            <label>A:</label>
                            <InputDate @bind-Value="@Date2" class="form-control col-12" />
                        </div>
                        <div class="col-12 d-flex justify-content-end">
                            <button class="btn gcom-bg-amarillo" @onclick="@MostrarOrdenFecha"><b>Mostrar ordenes</b></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="d-flex justify-content-center">
        <div class="col-9">
            <label><b>Asignar unidades:</b></label>
            <div class="col card shadow-sm">
                <div class="col-12 card-body">
                    <div class="row mb-3">
                        <div class="col">
                            <label>Transportista:</label>
                            <InputSelect class="form-select col-12" @bind-Value="TransportistaSeleccionado" @onselect="()=>GetChoferes()">
                                <input type="text" />
                                <option>-- seleccione una opcion --</option>
                                @if (Transportistas is null)
                                {
                                    <option disabled>Cargando...</option>
                                }
                                else if (Transportistas.Count == 0)
                                {
                                    <option disabled>No hay Transportistas</option>
                                }
                                else
                                {
                                    foreach (var item in Transportistas)
                                    {
                                        <option value="@item.Cod">@item.Den</option>
                                    }
                                }
                            </InputSelect>
                        </div>
                        <div class="col">
                            <label>Chofer:</label>
                            <InputSelect class="form-select col-12" @bind-Value="ChoferSeleccionado" onchange="@GetChoferes()">
                                <option>-- seleccione una opcion --</option>
                                @if (Choferes is null)
                                {
                                    <option disabled>Cargando...</option>
                                }
                                else if (Choferes.Count == 0)
                                {
                                    <option disabled>No hay Choferes</option>
                                }
                                else
                                {
                                    foreach (var item in Choferes)
                                    {
                                        <option value="@item.Cod">@item.Den</option>
                                    }
                                }
                            </InputSelect>
                        </div>
                        <div class="col">
                            <label>Vehiculo:</label>
                            <InputSelect class="form-select col-12" @bind-Value="VehiculoSeleccionado" onchange="@GetVehiculo()">
                                <option>-- seleccione una opcion --</option>
                                @if (Vehiculos is null)
                                {
                                    <option disabled>Cargando...</option>
                                }
                                else if (Vehiculos.Count == 0)
                                {
                                    <option disabled>No hay vehiculos</option>
                                }
                                else
                                {
                                    foreach (var item in Vehiculos)
                                    {
                                        <option value="@item.Cod">@item.Den</option>
                                    }
                                }
                            </InputSelect>
                        </div>
                    </div>
                    <div class="col-12">
                        <div class="row">
                            <div class="col-8 row align-content-center">
                                <div class="col">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="com" id="com1">
                                        <label class="form-check-label" for="com">
                                            Com1
                                        </label>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="com" id="com2">
                                        <label class="form-check-label" for="com">
                                            Com2
                                        </label>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="com" id="com3">
                                        <label class="form-check-label" for="com">
                                            Com3
                                        </label>
                                    </div>
                                </div>
                                <div class="col">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" name="com" id="com4">
                                        <label class="form-check-label" for="com">
                                            Com4
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="col-4">
                                <button class="btn gcom-bg-amarillo col-12">Asignar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="view mt-4">
    <div class="wrapper">
        <table class="table table-hover table-bordered">
            <thead>
                <tr>
                    <th class="sticky-col first-col">No.</th>
                    <th class="sticky-col second-col">Orden de compra</th>
                    <th class="sticky-col second-col" scope="col">Referencia</th>
                    <th scope="col">Cliente</th>
                    <th scope="col">Destino</th>
                    <th scope="col">Producto</th>
                    <th scope="col">Volumen</th>
                    <th scope="col">Fecha de carga</th>
                    <th scope="col">Transportista</th>
                    <th scope="col">Unidad</th>
                    <th scope="col">Compartimento</th>
                    <th scope="col">Operador</th>
                    <th scope="col">BIN</th>
                    <th scope="col">Status</th>
                    <th scope="col">SIMSA TRANSPORTE</th>
                </tr>
            </thead>
            <tbody>
                @if (ordenes is null)
                {
                    <SpinnerLoading />
                }
                else if (ordenes.Count == 0)
                {
                    <tr>
                        <td colspan="15">
                            <NoHayRegistros />
                        </td>
                    </tr>
                }
                else
                {
                    @for (int i = 0; i < ordenes.Count; i++)
                    {

                        <tr>
                            <td>@ordenes[i]?.Producto?.Den</td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                            <td></td>
                        </tr>

                    }
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private OrdenEmbarque ordenEmbarque { get; set; } = new OrdenEmbarque();
    private List<OrdenEmbarque> ordenes { get; set; } = new List<OrdenEmbarque>();
    //Listas
    private List<CodDenDTO> Destinos { get; set; } = null!;
    private List<CodDenDTO> Productos { get; set; } = null!;

    private List<CodDenDTO> Transportistas { get; set; } = null!;
    private List<CodDenDTO> Choferes { get; set; } = null!;
    private List<CodDenDTO> Vehiculos { get; set; } = null!;

    //Selecciones
    private int ProductoSeleccionado = 0;
    private int DestinoSeleccionado = 0;
    private int TransportistaSeleccionado = 0;
    private int TransportistaSeleccionadoB = 0;

    private int ChoferSeleccionado = 0;
    private int ChoferSeleccionadoB = 0;

    private int VehiculoSeleccionado = 0;
    [Parameter]
    public DateTime Date1 { get; set; } = DateTime.MinValue;
    [Parameter]
    public DateTime Date2 { get; set; } = DateTime.MinValue;

    protected override async Task OnInitializedAsync()
    {
        await GetDestinos();
        await GetProductos();
        await GetTransportista();
    }

    public async Task GetDestinos()
    {
        var response = await repositorio.Get<List<CodDenDTO>>("api/destino");
        if (response.Error)
        {
            var responseHttp = await response.ObtenerMensajeError();
            await swal.FireAsync("Error", responseHttp, SweetAlertIcon.Error);
        }
        else
        {
            Destinos = response.Response;
        }
    }

    public async Task GetProductos()
    {
        var response = await repositorio.Get<List<CodDenDTO>>("api/producto");
        if (response.Error)
        {
            var responseHttp = await response.ObtenerMensajeError();
            await swal.FireAsync("Error", responseHttp, SweetAlertIcon.Error);
        }
        else
        {
            Productos = response.Response;
        }
    }

    public async Task GetTransportista()
    {
        var response = await repositorio.Get<List<CodDenDTO>>("api/transportista");
        if (response.Error)
        {
            var responseHttp = await response.ObtenerMensajeError();
            await swal.FireAsync("Error", responseHttp, SweetAlertIcon.Error);
        }
        else
        {
            Transportistas = response.Response;
        }
    }
    public async Task GetChoferes()
    {
        if (TransportistaSeleccionado != 0 && TransportistaSeleccionado != TransportistaSeleccionadoB)
        {
            var response = await repositorio.Get<List<CodDenDTO>>($"api/chofer/{TransportistaSeleccionado}");
            if (response.Error)
            {
                var repositorioHttp = await response.ObtenerMensajeError();
                await swal.FireAsync("Error", repositorioHttp, SweetAlertIcon.Error);
            }
            else
            {
                TransportistaSeleccionadoB = TransportistaSeleccionado;
                Choferes = response.Response;
                StateHasChanged();
            }
        }
    }
    public async Task GetVehiculo()
    {
        if (ChoferSeleccionado != 0 && ChoferSeleccionado != ChoferSeleccionadoB)
        {
            var response = await repositorio.Get<List<CodDenDTO>>($"api/vehiculo/{ChoferSeleccionado}");
            if (response.Error)
            {
                var repositorioHttp = await response.ObtenerMensajeError();
                await swal.FireAsync("Error", repositorioHttp, SweetAlertIcon.Error);
            }
            else
            {
                Vehiculos = response.Response;
                StateHasChanged();
                ChoferSeleccionadoB = ChoferSeleccionado;
            }
        }
    }
    public async Task MostrarOrdenFecha()
    {
        try
        {

            var responseHttp = await repositorio.Get<List<OrdenEmbarque>>($"api/pedido/{Date1.ToString("dd-MM-yyyy")}/{Date2.ToString("dd-MM-yyyy")}");


            var responseHttp = await repositorio.Get<List<OrdenEmbarque>>("api/pedido/");

            if (responseHttp.Error)
            {
                var respuestaHttp = await responseHttp.ObtenerMensajeError();
                await swal.FireAsync("Error", respuestaHttp, SweetAlertIcon.Error);
            }
            else
            {
                ordenes = responseHttp.Response;
            }
        }
        catch (Exception e)
        {
            await swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
            throw e;


        }
        catch
        {


        }
    }
}
<!--Grupo, cliente y estacion-->
<!--Transportista, chofer y vehiculo--

}
<!--Grupo, cliente y estacion-->
<!--Transportista, chofer y vehiculo-->
<!--cod, den , activo-->