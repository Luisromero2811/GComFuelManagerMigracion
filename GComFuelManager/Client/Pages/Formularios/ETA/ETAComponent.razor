@page "/ETA"
@inject IRepositorio repositorio
@inject SweetAlertService swal
@inject IJSRuntime JS
@inject HttpClient Http
@using System.IO;
@using System.Text.Json;
@using GComFuelManager.Client.Helpers;
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize(Roles = "Admin, Administrador Sistema, Direccion, Gerencia, Ejecutivo de Cuenta Comercial, Programador, Coordinador, Analista Suministros, Auditor, Capturista Recepcion Producto")]


<h4><b>ETA</b></h4>
<!--Primer formulario para tiempo estimado de llegada del pedido-->
<div class="col-12 card shadow">
    <div class="card-body">
        <EditForm Model="ordenEmbarque" class="row">
            <AuthorizeView Roles="Admin, Administrador Sistema, Coordinador, Capturista Recepcion Producto" Context="Filter">
                <div class="row d-flex g-3">
                    <div class="row">
                        <div class="col-6">
                            <label>Nombre Bol:</label>
                            <InputText class="form-control" @bind-Value="nmbr" />
                        </div>
                        <div class="col-1 mt-4">
                            <button class="btn gcom-bg-amarillo col-12">
                                <i class="fa-solid fa-magnifying-glass"></i>
                            </button>
                        </div>
                        <AuthorizeView Roles="Admin, Administrador Sistema, Coordinador" Context="SendETA">
                            <div class="col-2 mt-4">
                                <button class="btn gcom-bg-amarillo col-12">
                                    <i class="fa-solid fa-arrow-up-from-bracket"></i> <b>Enviar ETA</b>
                                </button>
                            </div>
                        </AuthorizeView>
                    </div>
                </div>
            </AuthorizeView>
            <AuthorizeView Roles="Admin, Administrador Sistema, Coordinador" Context="Eta">
                <div class="row d-flex g-3">
                    <div class="row">
                        <div class="col-4">
                            <label>Fecha documentación:</label>
                            <InputDate class="form-control col-12" Type="InputDateType.DateTimeLocal" @bind-Value:format="yyyy-MM-dd hh:mm:ss" @bind-Value="@fechas.DateInicio" />
                        </div>

                        <div class="col-4">
                            <label>ETA:</label>
                            <InputDate class="form-control col-12" Type="InputDateType.DateTimeLocal" @bind-Value:format="yyyy-MM-dd hh:mm:ss" @bind-Value="@fechas.DateInicio" />
                        </div>

                    </div>
                </div>
                <div class="row d-flex g-3">
                    <div class="row">
                        <div class="col-4">
                            <label>Fecha de llegada estimada:</label>
                            <InputDate class="form-control col-12" Type="InputDateType.DateTimeLocal" @bind-Value:format="yyyy-MM-dd hh:mm:ss" @bind-Value="@fechas.DateInicio" />
                        </div>

                        <div class="col-4">
                            <label>En trayecto:</label>
                            <InputText class="form-control" @bind-Value="nmbr" />
                        </div>
                        <div class="col-4">
                            <label>Equipo:</label>
                            <InputText class="form-control" @bind-Value="nmbr" />
                        </div>
                    </div>
                </div>
            </AuthorizeView>


            <AuthorizeView Roles="Admin, Administrador Sistema, Capturista Recepcion Producto" Context="EtaReal">
                <!--btn look-->
                <div class="row d-flex g-3">
                    <div class="row justify-content-end">
                    </div>
                </div>
                <div class="row">
                    <div class="col-6">
                        <label>Fecha real de llegada a destino:</label>
                        <InputDate class="form-control col-12" Type="InputDateType.DateTimeLocal" @bind-Value:format="yyyy-MM-dd hh:mm:ss" @bind-Value="@fechas.DateInicio" />
                    </div>
                    <div class="col-6">
                        <label>Cantidad de litros entregados:</label>
                        <InputText class="form-control" @bind-Value="nmbr" />
                    </div>
                </div>
                <div class="row g-3 mt-1 mb-2">
                    <div class="col-6">
                        <label>Observaciones</label>
                        <InputTextArea class="form-control" @bind-Value="nmbr"></InputTextArea>
                    </div>
                </div>
                <div class="row d-flex g-3">
                    <div class="row justify-content-end">
                        <div class="col-3 mt-3 mb-3">
                            <button class="btn gcom-bg-amarillo col-12">
                                <i class="fa fa-solid fa-floppy-disk"></i> <b>Cerrar Orden</b>
                            </button>
                        </div>
                    </div>
                </div>
            </AuthorizeView>
        </EditForm>
    </div>
</div>
<AuthorizeView Roles="Admin, Administrador Sistema, Direccion, Gerencia, Ejecutivo de Cuenta Comercial, Programador, Coordinador, Analista Suministros, Analista Credito , Auditor, Capturista Recepcion Producto" Context="Exportar">
    <!--Segundo formulario para exportación de ETA-->
    <div class="col-12 card shadow mt-3 mb-5">
        <div class="card-body">
            <EditForm Model="@ordenEmbarque">
                <div class="row g3 d-flex">
                    <div class="row">
                        <div class="col-md-6">
                            <label>Reporte:</label>
                            <InputDate class="form-control col-12" @bind-Value="@fechas.DateInicio" />
                        </div>
                        <div class="col-md-6">
                            <label></label>
                            <InputDate class="form-control col-12" @bind-Value="@fechas.DateFin" />
                        </div>
                    </div>
                </div>
                <div class="row justify-content-end me-3 mt-3 mb-3">
                    <div class="col-3 mt-3 mb-3">
                        <button class="btn gcom-bg-amarillo col-12" @onclick="@ExportExcel"><img src="img/sobresalir.png" class="img-fluid" style="width:16px; height:auto;" /><b>Exportar</b></button>
                    </div>
                </div>
            </EditForm>
        </div>
    </div>
</AuthorizeView>

@code {
    private Orden ordenEmbarque { get; set; } = new Orden();
    private List<EtaDTO> ordens { get; set; } = null!;

    private Usuario usuario { get; set; } = new Usuario();
    private string nmbr = string.Empty;
    public DateTime Date { get; set; }

    EtaDTO ordenes = new EtaDTO();
    FechasF fechas = new FechasF();
    public async Task ExportExcel()
    {
        try
        {
            var responseHttp = await repositorio.Post<FechasF, List<EtaDTO>?>($"api/Eta/Etareporte", fechas);
            if (responseHttp.Error)
            {
                var respuestaHttp = await responseHttp.ObtenerMensajeError();
                await swal.FireAsync("Error", respuestaHttp, SweetAlertIcon.Error);
            }
            else
            {
                ordens = responseHttp.Response;
                //Licencia para guardado de Excel
                ExcelPackage.LicenseContext = LicenseContext.NonCommercial;
                //Generacion de Excel
                var excel = new ExcelPackage();
                var worksheet = excel.Workbook.Worksheets.Add("ETA");
                worksheet.Columns.Width = 49;
                worksheet.Columns.AutoFit();
                //Formación de Excel
                var tablebody = worksheet.Cells["A1:A1"].LoadFromCollection(
                    ordens
                  , true);
                tablebody.Style.Font.Bold = true;
                tablebody.Style.HorizontalAlignment = ExcelHorizontalAlignment.Center;
                var header = worksheet.Cells["A1:T1"];
                header.Style.Fill.PatternType = ExcelFillStyle.Solid;
                header.Style.Fill.BackgroundColor.SetColor(Color.LightGray);
                //Guardar Excell
                await JS.GuardarComo($"ETA_{DateTime.Now.ToString("yyyyy-MM-dd hh:mm:ss")}.xlsx", excel.GetAsByteArray());
            }
        }
        catch (Exception e)
        {
            await swal.FireAsync("Error", e.Message + "Error2", SweetAlertIcon.Error);
        }
    }

}

