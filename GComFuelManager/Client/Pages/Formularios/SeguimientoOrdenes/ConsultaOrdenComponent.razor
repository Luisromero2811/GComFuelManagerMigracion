@page "/consulta/Orden"

@inject IRepositorio repositorio
@inject SweetAlertService Swal
@inject IJSRuntime Js
@inject TooltipService ts

@attribute [Authorize(Roles = "Admin, Administrador Sistema, Direccion, Gerencia, Analista Credito, Consulta Precio Orden")]

<div class="col-12 d-flex justify-content-center mb-2 shadow-sm">
    <div class="col-12">
        <div class="col-12 card">
            <div class="col-12 card-body">
                <div class="col-12 row">
                    <div class="col-12 row">
                        <div class="col-8">
                            <label><b>Consulta de orden</b></label>
                        </div>
                    </div>
                </div>
                <div class="col-12 row">
                    <div class="col-3">
                        <label class="form-label">Referencia ENER:</label>
                        <InputText class="form-control col-12" MaxLength="70" @bind-Value="preciosBols.Referencia" />
                    </div>
                    <div class="col-3 d-flex">
                        <div class="col-12 mt-auto">
                            <button class="col-12 btn gcom-bg-amarillo px-0" @onclick="@GetBolOrden">
                                <i class="fa fa-solid fa-magnifying-glass"></i> Consultar orden
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="col-12 mt-4 overflow-scroll ancho" style="height:449px; resize:both;">
    <table class="table table-hover table-bordered table-sm table-responsive" style="max-height: 600px; overflow: auto; width: 100%">
        <thead>
            <tr>
                <th class="th-resizable overflow-hidden" style="min-width:20px;width:400px;">BOL</th>
                <th class="th-resizable overflow-hidden" style="min-width:20px;width:400px;">Cliente</th>
                <th class="th-resizable overflow-hidden" style="min-width:20px;width:400px;">Destino</th>
                <th class="th-resizable overflow-hidden" style="min-width:20px;width:400px;">Producto</th>
                <th class="th-resizable overflow-hidden" style="min-width:20px;width:400px;">Precio</th>
                <th class="th-resizable overflow-hidden" style="min-width:20px;width:400px;">Volumen Cargado</th>
                <th class="th-resizable overflow-hidden" style="min-width:20px;width:400px" @onmouseenter="@(args => ShowToolTip(infoIcon))" @ref="infoIcon">Folio de Pedido <i class="fa-solid fa-circle-info fa-xs"></i></th> 
            </tr>
        </thead>
        <tbody>
            <Virtualize TItem="PrecioBolDTO" Items="PrecioBols" Context="data">
                <tr style="height:49px;">
                    <td>
                        @data.BOL
                    </td>
                    <td>
                        @data.Cliente_Original
                    </td>
                    <td>
                        @data.Destino_Original
                    </td>
                    <td>
                        @data.Producto_Original
                    </td>
                    <td>
                        @data.Precio
                    </td>
                    <td>
                        @string.Format(new System.Globalization.CultureInfo("en-US"), "{0:N2}", @data.Volumen_Cargado)

                    </td>
                    <td>
                        @data.Folio_Cierre
                    </td>
                </tr>
            </Virtualize>
        </tbody>

    </table>
</div>


@code {

    ElementReference infoIcon;
    void ShowToolTip(ElementReference elementReference, TooltipOptions options = null!) => ts.Open(elementReference, "Si la columna aparece en blanco indica que la orden es individual y no pertenece a un pedido", options);


    List<Orden>? orden { get; set; } = new List<Orden>();
    Orden? Ordenes { get; set; } = new Orden();

    List<PrecioBolDTO> PrecioBols = new List<PrecioBolDTO>();
    PrecioBolDTO preciosBols { get; set; } = new PrecioBolDTO();

    private async Task GetBolOrden()
    {
        try
        {
            var response = await repositorio.Get<List<PrecioBolDTO>>($"api/cierre/Folio/{preciosBols.Referencia}");
            if (response != null)
            {
                if (response.Error)
                {
                    var message = await response.ObtenerMensajeError();
                    await Swal.FireAsync("Error", message, SweetAlertIcon.Error);
                }
                else
                {
                    PrecioBols = response.Response;
                }
            }
        }
        catch (Exception e)
        {
            await Swal.FireAsync("Error", e.Message, SweetAlertIcon.Error);
        }
    }

}

