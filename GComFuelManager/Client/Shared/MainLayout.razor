@inherits LayoutComponentBase
@inject GComFuelManager.Client.Auth.RenovadorToken renovadorToken
@inject IJSRuntime js
@inject NavigationManager navigationManager

<AuthorizeView>
    <Authorized>
        <RadzenDialog />
        <RadzenNotification />
        <RadzenContextMenu />
        <RadzenTooltip />

        <div class="page">
            @if (!isClosed)
            {
                <div class="sidebar">
                    @*<MenuLateral />*@
                    <NavMenu></NavMenu>
                </div>
            }

            <main>
                <div>
                    <MenuNav close=@isClosed closeMenu="CloseMenu" />
                </div>

                <article class="content px-4">
                    @Body
                </article>
            </main>
        </div>
    </Authorized>
</AuthorizeView>

@code{
    public bool isClosed = false;

    public async void CloseMenu()
    {
        isClosed = !isClosed;
        await js.SetItemLocalStorage("CloseMenu", isClosed.ToString());
    }

    //[CascadingParameter]
    //public Task<AuthenticationState> AuthenticationStateTask { get; set; } = null!;
    protected async override Task OnInitializedAsync()
    {
        //await js.InvokeVoidAsync("timerInactivo", DotNetObjectReference.Create(this));
        var cm = await js.GetItemLocalStorage("CloseMenu");
        if (cm is not null)
            isClosed = bool.Parse(cm);
        renovadorToken.Iniciar();
    }

    //[JSInvokable]
    //public async Task Logoute()
    //{
    //    var authstate = await AuthenticationStateTask;
    //    if (authstate.User.Identity!.IsAuthenticated)
    //    {
    //        navigationManager.NavigateTo("logout");
    //    }
    //}

}