@using Blazored.Typeahead
@typeparam T

<BlazoredTypeahead TValue="T" TItem="T" SearchMethod="Buscar" Value="value"
    ValueChanged="ItemSeleccionado" ValueExpression="@(()=>simpleItem)" class="form-control col-12">
    <ResultTemplate>
        @Resultado(context)
    </ResultTemplate>
    <NotFoundTemplate>
        No se encontraron resultados.
    </NotFoundTemplate>
    <SelectedTemplate>
        @Selecteccionado(context)
    </SelectedTemplate>
</BlazoredTypeahead>

@code {
    [Parameter] public List<T> listado { get; set; } = new List<T>();
    [Parameter] public Func<string, Task<IEnumerable<T>>> Buscar { get; set; } = null!;
    [Parameter] public RenderFragment<T> Resultado { get; set; } = null!;
    [Parameter] public RenderFragment<T> Selecteccionado { get; set; } = null!;
    [Parameter] public T value { get; set; } = default(T);

    T simpleItem = default(T);


    private void ItemSeleccionado(T item)
    {
        if (!listado.Any(x=>x.Equals(item)))
        {
            listado.Add(item);
        }

        simpleItem = default(T);
    }
}
